{"ast":null,"code":"var _jsxFileName = \"/Users/shaunroecker/SCR/WebDev/REACT/monsterApp/src/containers/App.js\";\nimport { Component } from 'react';\nimport monsters from \"../data/sampleUsers\"; //import logo from '../images/logo.svg';\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: monsters\n    };\n  }\n  /*\n  onNameChange = () => {\n    this.setState(() => {\n      return {\n        name: {firstName: \"Andrei\", lastName: \"Nagouie\"}\n      }\n    }, () => {// <-- this is a callback, runs after finishing first function, \n      console.log(this.state.name)// because the first func is asynchronous\n    }         \n  )}; */\n\n\n  render() {\n    //const {  } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map((monster, index) => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["Component","monsters","App","constructor","state","render","map","monster","index","name"],"sources":["/Users/shaunroecker/SCR/WebDev/REACT/monsterApp/src/containers/App.js"],"sourcesContent":["import { Component } from 'react';\nimport monsters from \"../data/sampleUsers\";\n//import logo from '../images/logo.svg';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n      super();\n      this.state = {\n        monsters: monsters,\n\n      }\n    }\n\n    /*\n    onNameChange = () => {\n      this.setState(() => {\n        return {\n          name: {firstName: \"Andrei\", lastName: \"Nagouie\"}\n        }\n      }, () => {// <-- this is a callback, runs after finishing first function, \n        console.log(this.state.name)// because the first func is asynchronous\n      }         \n    )}; */\n\n    render(){\n      //const {  } = this.state;\n      return (\n        <div className=\"App\">\n          {this.state.monsters.map((monster, index) => {\n            return (\n              <h1 key={index}>{monster.name}</h1>\n            )\n          })}\n        </div>\n      );\n    }\n}\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EACxBG,WAAW,GAAG;IACZ;IACA,KAAKC,KAAL,GAAa;MACXH,QAAQ,EAAEA;IADC,CAAb;EAID;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAEII,MAAM,GAAE;IACN;IACA,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,UACG,KAAKD,KAAL,CAAWH,QAAX,CAAoBK,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;QAC3C,oBACE;UAAA,UAAiBD,OAAO,CAACE;QAAzB,GAASD,KAAT;UAAA;UAAA;UAAA;QAAA,QADF;MAGD,CAJA;IADH;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AA/BuB;;AAiC5B,eAAeN,GAAf"},"metadata":{},"sourceType":"module"}